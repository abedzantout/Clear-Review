<dialog id="CourseProfile" class="mdl-dialog CRCourseProfile">
    <link rel="stylesheet" type="text/css" href="stylesheets/CourseProfile.css">


    <!-- The nodejs code below is hard coded for now. These variables should be assigned with a DB query-->
    <% CourseTitle = "Software Engineering";
    CourseSubject = "CMPS";
    CourseNumber = "253";
    CourseCredits = "3 Cr";
    Question1 = "Question1";
    Question2 = "Question2";
    Question3 = "Question3";
    Question4 = "Question4";
    Question5 = "Question5";
    %>

    <div class="CourseProfileHeader">
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button close">X</button>
        </div>
        </br>
        <h4 class="mdl-dialog__title"><%= CourseSubject + " " + CourseNumber %></h4>
        <h5 class="mdl-dialog__content">
            <%= CourseTitle + " - " + CourseCredits %>
        </h5>
    </div>

    <div class="CourseProfileContent">
        <div id="CourseProfileCheckBoxForm">
            <p id="ResultsDescription">
                Below you can view the total results of the evaluation forms filled by the students for this particular
                course instance. Clicking on the check boxes will display the results for that particular question on
                the graph below. Activating multiple check boxes will sum the results of the selected questions.
            </p>
            <section id="sectionMain">
                <form>
                    <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                           for="checkbox-1">
                        <input onclick="addData(this);" value="10,9,6" type="checkbox"
                               id="checkbox-1"
                               class="mdl-checkbox__input"/>
                        <span class="mdl-checkbox__label"><%= Question1 %></span>
                    </label>
                    <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                           for="checkbox-2">
                        <input onclick="addData(this);" value="8,2,10" type="checkbox"
                               id="checkbox-2"
                               class="mdl-checkbox__input"/>
                        <span class="mdl-checkbox__label"><%= Question2 %></span>
                    </label>
                    <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                           for="checkbox-3">
                        <input onclick="addData(this);" value="5,6,9" type="checkbox"
                               id="checkbox-3"
                               class="mdl-checkbox__input"/>
                        <span class="mdl-checkbox__label"><%= Question3 %></span>
                    </label>
                    <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                           for="checkbox-4">
                        <input onclick="addData(this);" value="4,7,9" type="checkbox"
                               id="checkbox-4"
                               class="mdl-checkbox__input"/>
                        <span class="mdl-checkbox__label"><%= Question4 %></span>
                    </label>
                    <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect"
                           for="checkbox-5">
                        <input onclick="addData(this);" value="7,7,6" type="checkbox"
                               id="checkbox-5"
                               class="mdl-checkbox__input"/>
                        <span class="mdl-checkbox__label"><%= Question5 %></span>
                    </label>
                </form>
                <canvas id="myChart" width="400" height="400"></canvas>
            </section>
        </div>
    </div>


    <!-- SCRIPTS FOR THE CHART-->
    <script src="../public/javascripts/libraries/Chart/d3.js"></script>
    <script src="../public/javascripts/libraries/Chart/Chart.js"></script>
    <script>
        //Variable to hold autocomplete options
        var keys;
        var State;

        //Load US States as options from CSV - but this can also be created dynamically
        d3.csv("../search_files/courses.csv", function (csv) {
            keys = csv;
            start();
        });


        //Call back for when user selects an option
        function onSelect(d) {
            var str = d.Page.replace(/"(.+)"/g, '$1');
            window.location = str;
        }

        //Setup and render the autocomplete

        var ctx = document.getElementById("myChart").getContext("2d");

        var data = [
            {
                value: 0,
                color: "#F7464A",
                highlight: "#FF5A5E",
                label: "Yes"
            },
            {
                value: 0,
                color: "#46BFBD",
                highlight: "#5AD3D1",
                label: "No"
            },
            {
                value: 0,
                color: "#FDB45C",
                highlight: "#FFC870",
                label: "Maybe"
            }

        ];

        var myNewChart = new Chart(ctx).PolarArea(data);

        function addData(optionVal) {
            var test = optionVal.value.split(",");
            if (optionVal.checked) {
                myNewChart.segments[0].value += parseInt(test[0]);
                myNewChart.segments[1].value += parseInt(test[1]);
                myNewChart.segments[2].value += parseInt(test[2]);
                myNewChart.update();
            } else {
                myNewChart.segments[0].value -= parseInt(test[0]);
                myNewChart.segments[1].value -= parseInt(test[1]);
                myNewChart.segments[2].value -= parseInt(test[2]);
                myNewChart.update();
            }
        }
    </script>
    <!-- endbuild -->

    <!-- Google Analytics: change UA-XXXXX-X to be your site's ID -->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                        (i[r].q = i[r].q || []).push(arguments)
                    }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                    m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
        ga('create', 'UA-XXXXX-X', 'auto');
        ga('send', 'pageview');
    </script>


</dialog>